grammar Sexp

  ######################################################### high-level rules
  rule expression
    list | termexpr
  end
  
  rule list
    LPAREN arglist RPAREN
  end
  
  rule arglist 
    expression ((COMMA | SPACES) expression)*
  end
  
  rule termexpr
    NUMERIC | STRING | VARIABLE | MODULE
  end

  ######################################################### numerics
  rule NUMERIC
    FLOAT | INTEGER
  end
  rule FLOAT
    SIGN? (DIGITS '.' DIGITS)
  end
  rule INTEGER
    SIGN? DIGITS
  end
  rule DIGITS
    [0-9]+ ('_' [0-9]+)*
  end
  rule SIGN
    [+-]
  end
  
  ######################################################### strings
  rule STRING
    DOUBLE_QUOTED_STRING | SINGLE_QUOTED_STRING
  end
  rule DOUBLE_QUOTED_STRING
    DOUBLE_QUOTE (BACKSLASH DOUBLE_QUOTE | !DOUBLE_QUOTE .)* DOUBLE_QUOTE
    # could be? /["](([\\]["]|[^"])*?)["]/
  end
  rule SINGLE_QUOTED_STRING
    SINGLE_QUOTE (BACKSLASH SINGLE_QUOTE | !SINGLE_QUOTE .)* SINGLE_QUOTE
    # could be? /['](([\\][']|[^'])*?)[']/
  end
  
  ######################################################### vars, methods, modules
  rule VARIABLE
    VARIABLE_NAME
  end
  rule VARIABLE_NAME
    [a-z] [a-zA-Z0-9_]*
  end
  rule MODULE
    '::'? MODULE_NAME ('::' MODULE_NAME)*
  end
  rule MODULE_NAME
    [A-Z] [a-zA-Z0-9]*
  end

  ######################################################### symbols
  rule SYMBOL 
    LPAREN | RPAREN | COMMA
  end
  rule DOUBLE_QUOTE
    ["]
  end
  rule SINGLE_QUOTE
    [']
  end
  rule BACKSLASH
    [\\]
  end
  rule COMMA
    ',' 
  end
  rule LPAREN 
    '('
  end
  rule RPAREN 
    ')'
  end

  ######################################################### SPACING
  rule SPACE       [ \t\n\r]              end
  rule SPACES      SPACE+                 end

end